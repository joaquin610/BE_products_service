name: Java CI/CD with Maven

on:
  push:
    branches: [ "main", "develop", "testing" ]
  pull_request:
    branches: [ "main", "develop", "testing" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: mvn test        

      # - name: Test with JAR
      #   run: java -jar target/products-service-example-0.0.1-SNAPSHOT-spring-boot.jar 

  cd:
    runs-on: ubuntu-latest
    needs: build
    # if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
     
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Build and push Docker image
        env:
          ECR_REPOSITORY: products-service-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REGISTRY }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS service with new image
        env:
          CLUSTER_NAME: main-ecs-cluster
          SERVICE_NAME: BE_Products_Service
          CONTAINER_NAME: app
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: products-service-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment \
            --task-definition $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG